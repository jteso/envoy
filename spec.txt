nvoy_basic_auth_mod
nvoy_spike_arrest_mod


# Default locations
.
~/.envoy/etc
/etc/envoy

# Example: `envoy-example-services.api`

module "audit" {
	mod_log {
		log_file = kk.log
	}
}

module "security"{
	type = "mod_jwt_validation"
	config {
		cert = "~/.rsa/sts.cer"
	}
}

module "throttling" {
	type = "mod_spike_arrest"
	config {
		 rate = 10ps
	}
}


module "production-backend" {
	type = "mod_load_balancer" {
	config {	
		strategy = "round-robin",
		endpoints = [
			"http://dg1.intranet:4001", "http://dg2.intranet:4001", "http://dg3.intranet:4001"]
	}
}

api "/ping" {
	enabled = true
	method = POST
	directives = [
		include-module = "audit",
		include-module = "security",
		include-module = "throttling",
		module "mod_load_balancer" {
			strategy = "round-robin",
			endpoints = ["http://dg1.intranet:4001", "http://dg2.intranet:4001", "http://dg3.intranet:4001"]
		}


	] 
}

api "/signon/$cif" {
	version = 1,
	enabled = true
	method = GET
	schema = "",
	pipeline [ 
		module "mod_transform" {
			set-header= "X-Real-IP=$remote_addr"
		},
		module "mod_max_size" { size = 10Mb },
		module "mod_gzip" {}

	}
	]
}

mock "/signon/$cif" {
	test "test-wrong-jwt-token"{
		request = {
			header.authenticated = "12*"
		}
		response = {
			status = 500
			body   = "Saml token is invalid"
		}

	}

	test "default"{
		response = {
			header.version = "1.0"
			body = "pong"
		}
	}

}